---
import { Movie } from '../model/database';

export interface Props {
    movie: Movie;
    animation_delay?: number;
}

const { movie } = Astro.props;
const animation_delay = (Astro.props.animation_delay === undefined ? 0 : Astro.props.animation_delay) + 'ms';

const properties = [];
if (movie.season || movie.episode) {
    if (movie.season) {
        properties.push(`Season ${movie.season}${movie.episode ? '' : ' Full'}`);
    } else {
        properties.push(`Episode ${movie.episode}`);
    }
} else if (movie.year) {
    properties.push(movie.year);
} else if (movie.language) {
    properties.push(movie.language);
} else if (movie.resolution) {
    properties.push(movie.resolution);
} else if (movie.quality) {
    properties.push(movie.quality);
}
---
<link rel="stylesheet" href="/style/search.css">
<div class="movie" style={{ animationDelay: animation_delay }}>
    <div class="poster-container">
        <img src={movie.image} alt={movie.title || movie.baseName} onerror="this.onerror=null;this.src='/assets/placeholder.jpg'" />
    </div>
    
    <div class="vbox movie-info">
        <h3>{movie.title || movie.baseName}</h3>
        <ul>
            {properties.map((prop) => <li>{prop}</li>)}
        </ul>
    </div>
</div>
<style>
    html.is-loaded .movie {
        animation: movie-appear 0.5s ease-in-out forwards;
    }

    html.is-refreshed .movie {
        transform: rotate(0deg);
    }

    @keyframes movie-appear {
        0% {
            transform: rotateY(90deg);
            opacity: 0;
        }
        100% {
            transform: rotateY(0deg);
            opacity: 1;
        }
    }
</style>

