---
import MovieItem from "../../../components/MovieItem.astro";
import App from "../../../layouts/App.astro";
import getConfig from "../../../model/config";
import UserManager from "../../../model/usermanager";
import { humanFileSize, isAuthorized } from "../../../model/utils";

const authorized = isAuthorized(Astro.request)
if (!authorized) return Astro.redirect("/login");

const library = UserManager.getUserSync(authorized as string).getLibrary();
const folders = library.getFolders();
const movies = [...library.getMovies().values()];
let i = 0;
const elements = movies.map((movie) => {
    const folder = folders.get(movie.id);
    movie.title = folder.name;
    return {
        ...movie,
        created_at: folder.created_at
    }
}).sort((a, b) => b.created_at - a.created_at);
for (const movie of elements) {
    movie.index = i++;
}

const quota_percentage = Math.min(Math.round((await library.getQuotaPercentage()) * 100), 100);
const quota = humanFileSize(await library.getQuota());
const max_quota = getConfig().jaajtv_max_user_storage;
---
<App title="jaajTV  |  Library" selected_index={1}>
    <div class="container fade-transition">
        <header>
            <label><img src="/icon/clock.svg" /><h2>Recently added</h2></label>
            <div id="quota-bar-container">
                <div id="quota-bar-text">{quota} / {max_quota} GB</div>
                <div id="quota-bar">
                    <div id="quota-bar-fill" style={`width: ${quota_percentage}%`}></div>
                </div>
            </div>
        </header>
        <div class="carousel">
            <div class="carousel-container">
                <div class="carousel-spacer left"></div>
                {elements.map(movie => <MovieItem movie={movie} animation_delay={movie.index*200} href={"/app/library/"+movie.id}/>)}
                <div class="carousel-spacer right"></div>
            </div>
            <div class="carousel-button right inactive" onclick="moveCarousel(this, 'right')"></div>
            <div class="carousel-button left inactive" onclick="moveCarousel(this, 'left')"></div>
        </div>
    </div>
    <script defer>
        function moveCarousel(button, direction) {
            const carousel = button.parentElement.getElementsByClassName("carousel-container")[0];
            carousel.scrollBy({
                left: direction === "right" ? 300 : -300,
                behavior: "smooth"
            });
            setTimeout(() => {
                updateCarouselButtons();
            }, 500);
        }

        function updateCarouselButtons() {
            const button_left = document.getElementsByClassName("carousel-button left")[0];
            const button_right = document.getElementsByClassName("carousel-button right")[0];
            const carousel = document.getElementsByClassName("carousel-container")[0];
            if (carousel.scrollLeft === 0) {
                button_left.classList.add("inactive");
            } else {
                button_left.classList.remove("inactive");
            }
            console.log(carousel.scrollWidth, carousel.scrollLeft, carousel.clientWidth);
            if (carousel.scrollLeft + carousel.clientWidth >= carousel.scrollWidth - 50) {
                button_right.classList.add("inactive");
            } else {
                button_right.classList.remove("inactive");
            }
        }

        document.addEventListener("DOMContentLoaded", () => {
            updateCarouselButtons();
        });
    </script>
    <style>
        .container {
            transition: opacity 500ms;
        }
        .container label {
            display: flex;
            align-items: center;
            margin: 20px 30px;
        }
        .container label img {
            width: 30px;
            height: 30px;
            margin-right: 10px;
        }
        .container label h2 {
            font-size: 1.5rem;
            font-weight: 600;
            font-family: 'Roboto', sans-serif;
            user-select: none;
        }

        html.is-loaded .container label {
            animation: slide-in 1000ms forwards;
        }

        html.is-leaving .container.fade-transition {
            opacity: 0;
        }

        .carousel {
            position: relative;
            overflow:visible;
        }
        .carousel-container {
            display: flex;
            flex-wrap: nowrap;
            transition: transform 0.5s;
            overflow: hidden;
        }
        .carousel-spacer {
            min-width: 80px;
            height: 100%;
        }
        .carousel-button {
            position:absolute;
            top: 50%;
            transform: translateY(-50%);
            width: 50px;
            height: 50px;
            background-color: whitesmoke;
            border-radius: 50%;
            cursor: pointer;
            transition: background-color 0.2s;
            transition: transform 0.5s ease-in-out;
            border: 1px solid #e0e0e0;
        }
        .carousel-button:hover {
            background-color: #e0e0e0;
        }
        .carousel-button:active {
            background-color: #d0d0d0;
            transition: background-color 0.1s;
        }

        .carousel-button.right {
            right: 0;
            margin-right: 5px;
        }
        .carousel-button.left {
            left: 0;
            margin-left: 5px;
        }
        /* Draw line arrows */
        .carousel-button::before {
            content: "";
            position: absolute;
            top: 40%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(40deg);
            width: 17px;
            height: 2px;
            background-color: black;
        }
        .carousel-button::after {
            content: "";
            position: absolute;
            top: 60%;
            left: 50%;
            transform: translate(-50%, -50%) rotate(-40deg);
            width: 17px;
            height: 2px;
            background-color: black;
        }
        .carousel-button.left::before {
            transform: translate(-50%, -50%) rotate(140deg);
        }
        .carousel-button.left::after {
            transform: translate(-50%, -50%) rotate(-140deg);
        }
        .carousel-button.right.inactive {
            transform: translate(60px, -50%);
        }
        .carousel-button.left.inactive {
            transform: translate(-60px, -50%);
        }

        header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin: 20px 30px;
        }

        #quota-bar-container {
            display: flex;
            flex-direction: column;
            align-items: left;
        }

        #quota-bar {
            width: 200px;
            height: 10px;
            background-color: #e0e0e0;
            border-radius: 5px;
            overflow: hidden;
        }

        #quota-bar-text {
            font-size: 0.8rem;
            font-weight: 600;
            font-family: 'Roboto', sans-serif;
            user-select: none;
            margin-bottom: 0.2rem;
        }

        #quota-bar-fill {
            height: 100%;
            background-color: #00ff11;
            transition: width 0.5s;
        }

        @keyframes slide-in {
            0% {
                opacity: 0;
                transform: translateX(-100px);
            }
            100% {
                opacity: 1;
                transform: translateX(0);
            }
        }
    </style>
</App>