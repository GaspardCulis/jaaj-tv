---
import BottomPopup from "../../components/BottomPopup.astro";
import LoadingBoi from "../../components/LoadingBoi.astro";
import SearchBar from "../../components/SearchBar.astro";
import App from "../../layouts/App.astro";
import { isAuthorized } from "../../model/utils";


if (!isAuthorized(Astro.request)) return Astro.redirect("/login");
---
<App title="jaajTV | Search" selected_index={0}>
    <link rel="stylesheet" href="/style/search.css" />
    <SearchBar />
    <div style="pointer-events: none;position:absolute; margin: auto; width: 85%; height: 100%; display: flex; justify-content: center; align-items: center;" id="loading-boi">
        <LoadingBoi />
    </div>
    <div id="search-results" class="hbox wrap fade-transition">
    </div>
    <BottomPopup message="No results" color="#FFFFFF"/>
<script src="/src/movie-transition.js" is:inline></script>
<script type="text/javascript" defer>

function movieElement(movie, animation_delay, no_animation) {
    const out = document.createElement("a");
    out.classList.add("vbox", "movie");
    out.href = `/app/movie/${movie.id}`;
    out.style.color = "inherit";
    out.style.textDecoration = "none";
    out.style.cursor = "initial";
    out.setAttribute("onclick", `onMovieClicked(this); handleLoad(event);`);

    if (no_animation) {
        out.style.animation = `movie-appear 0s forwards`;
    } else {
        out.style.animation = `movie-appear 0.5s ease-in-out ${animation_delay}s forwards`;
    }

    const image_fallback = "/assets/placeholder.jpg";
    let image_url = movie.image ? movie.image : image_fallback;

    const important_properties = ["episode","season","language", "quality", "resolution", "year"];

    out.innerHTML = `
        <div class="poster-container">
            <img src="${image_url}" alt="${movie.title}" onerror="this.onerror=null;this.src='${image_fallback}'" />
        </div>
        
        <div class="vbox movie-info">
            <h3>${movie.title || movie.baseName}</h3>
            <ul>
                ${important_properties.map((prop) => {
                    return movie[prop] ? `<li>${prop}: ${movie[prop]}</li>` : ""
                }).join("")}
            </ul>
        </div>
        `
    return out;
}

/**
 * @param { String } query
 * @param { boolean | void } no_animation
 */
async function runSearch(query, no_animation) {
    const container = document.getElementById("search-results");
    container.innerHTML = "";

    const response = await fetch("/api/search", {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
        },
        body: query,
    });

    const results = (await response.json()).results;

    let i = 0;
    for (const result of results) {
        container.appendChild(movieElement(result, i * 0.1, no_animation));
        i++;
    }

    return results;
}

/**
 * @param { SubmitEvent } event
 */
async function onSearch(event) {
    event.preventDefault();
    
    const loadingBoi = document.getElementById("loading-boi");
    loadingBoi.classList.add("visible");

    const popup = document.getElementById("bottom_popup");
    popup.classList.remove("visible");

    const query =  JSON.stringify(Object.fromEntries(new FormData(event.target)));
    sessionStorage.setItem("search_query", query);

    const results = await runSearch(query);

    console.log(results);

    loadingBoi.classList.remove("visible");

    if (!results.length) {
        popup.classList.add("visible");
    }
}

document.addEventListener("DOMContentLoaded", () => {
    const searchBar = document.getElementById("search-bar");
    searchBar.addEventListener("submit", onSearch);

    let cached_search = sessionStorage.getItem("search_query");
    if(cached_search) {
        let custom_search = JSON.parse(cached_search);
        custom_search.is_custom = true;
        runSearch(JSON.stringify(custom_search), true);
        let formData = JSON.parse(cached_search);
        let form = document.getElementById("search-bar");
        form.getElementsByTagName("input")[0].value = formData.search;
        form.getElementsByTagName("select")[0].value = formData.category;
    }
});

</script>
</App>
<style>
    #search-results {
        overflow-y: auto;
        padding-block: 1rem;
        padding-right: 1rem;
        padding-left: 3rem;
        width: 100%;
        height: 100%;
    }

    html.is-leaving #search-results.fade-transition {
        opacity: 0;
        transition: opacity 0.5s ease-in-out;
    }

    html.is-loaded #search-results {
        animation: fade-in 1s ease-in;
    }

    #loading-boi {
        display: none;
        opacity: 0;
        transition: 1s;
    }

    #loading-boi.visible {
        display: block;
        animation: scale-in 1s forwards;
    }

    @keyframes fade-in {
        0% {
            opacity: 0;
        }
        100% {
            opacity: 1;
        }
    }

    @keyframes scale-in {
        0% {
            transform: scale(0);
            opacity: 0;
        }
        100% {
            transform: scale(1);
            opacity: 1;
        }
    }
</style>