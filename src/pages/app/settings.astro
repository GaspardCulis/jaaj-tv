---
import CheckBox from "../../components/CheckBox.astro";
import NavBar from "../../components/NavBar.astro";
import Transition from "../../components/Transition.astro";
import App from "../../layouts/App.astro";
import { isAuthorized } from "../../model/utils";

if (!isAuthorized(Astro.request)) return Astro.redirect("../login");

const option_defaults = {
    "setting-page-transitions": true,
}
---
<App title="jaajTV  |  Settings" selected_index={2} transition_duration={1000}>
    <div class="settings-container">
        <div class="settings-header">
            <h1>Settings</h1>
        </div>
        <div class="settings-content">
            <div class="settings-section">
                <h2>General</h2>
                <div class="settings-section-content">
                    <CheckBox label="Page transitions" id="setting-page-transitions" />
                </div>
            </div>
        </div>
        <div class="apply-button-container">
            <button class="apply-button" onclick="window.location.reload();">Apply</button>
        </div>
    </div>
    <script define:vars={{option_defaults}}>
        const checkboxes = document.getElementsByClassName("toggle-checkbox");
        for (let i = 0; i < checkboxes.length; i++) {
            const stored = localStorage.getItem(checkboxes[i].id);
            checkboxes[i].checked = stored ? stored === "true" : option_defaults[checkboxes[i].id] ?? false;
            checkboxes[i].addEventListener("change", () => {
                localStorage.setItem(checkboxes[i].id, checkboxes[i].checked + "");
            });
        }
    </script>
    <style>
        .settings-container {
            display: flex;
            flex-direction: column;
            height: 100%;
            background-color: whitesmoke;
            border-left: 2px #e5e5e5 solid;
        }
        .settings-header {
            display: flex;
            align-items: center;
            justify-content: left;
            height: 50px;
            padding-top: 20px;
            padding-left: 40px;
        }
        .settings-header h1 {
            font-size: 2rem;
            font-weight: 500;
            font-family:system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif
        }
        .settings-content {
            display: flex;
            flex-direction: column;
            flex: 1;
            padding-left: 80px;
        }
        .settings-section h2 {
            font-size: 1.5rem;
            font-weight: 500;
            margin-bottom: 20px;
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        .settings-section-content {
            display: flex;
            flex-direction: column;
            padding-left: 20px;
        }
        .apply-button-container {
            display: flex;
            align-items: center;
            justify-content: right;
        }
        .apply-button {
            margin: 20px;
            padding: 10px 20px;
            border-radius: 5px;
            border: none;
            background-color: #e5e5e5;
            font-size: 1rem;
            font-weight: 500;
            font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
        }
        .apply-button:hover {
            background-color: #d5d5d5;
        }
        .apply-button:active {
            background-color: #c5c5c5;
        }

        html.is-loaded .settings-container {
            animation: slide-in 1s ease-in-out;
        }

        html.is-leaving .settings-container {
            animation: slide-out 1s ease-in-out forwards;
        }

        @keyframes slide-in {
            0% {
                z-index: -1;
                transform: translateX(-100%);
            }
            99% {
                z-index: -1;
            }
            100% {
                z-index: 0;
                transform: translateX(0);
            }
        }

        @keyframes slide-out {
            0% {
                z-index: -1;
                transform: translateX(0);
            }
            100% {
                z-index: -1;
                transform: translateX(-100%);
            }
        }
    </style>
</App>