---
import Button from "../components/Button.astro";
import TextField from "../components/TextField.astro";
import FormBox from "../layouts/FormBox.astro";
import GradientBackground from "../layouts/GradientBackground.astro";
import { createAuthToken, isLoggedIn, isLoginValid } from "../model/database";
import { addCookie } from "../model/utils";

const cookie = Astro.request.headers.get("cookie") || "";
const token = (cookie.endsWith(";") ? cookie : cookie + ";").match(
	/token=([^;]*);/
);

if (token && isLoggedIn(token[1])) {
	return Astro.redirect("app");
}

if (Astro.request.method == "POST") {
	const text = await Astro.request.text();
	const username = new URLSearchParams(text).get("username");
	const password = new URLSearchParams(text).get("password");

	if (isLoginValid(username, password)) {
		console.log("Login valid");
		let { token, expires } = createAuthToken(username);
		const headers = new Headers();
		addCookie(headers, {
			name: "token",
			value: token,
			expires: expires,
			secure: true,
			path: "/",
		});
		headers.append("Location", "/app");

		return new Response("", {
			status: 302,
			headers,
		});
	} else {
		console.log(username, " is a dumbass");
		return Astro.redirect("?error=Invalid username or password");
	}

	console.log("m√©lian");
}

const error = Astro.url.searchParams.get("error") || "";
---

<GradientBackground title="Login">
	<form method="post">
		<FormBox title="Login">
			<TextField placeholder="Username" type="text" name="username" required />
			<TextField
				placeholder="Password"
				type="password"
				name="password"
				required
			/>
			<Button text="Login" />
			<div id="error">{error}</div>
			<div class="signup_link">
				Not a memeber ? <a id="register_link" href="register">Signup</a>
			</div>
		</FormBox>
	</form>
</GradientBackground>
<style>
	.signup_link {
		margin: 30px 0;
		text-align: center;
		font-size: 16px;
		color: #666666;
	}

	.signup_link a {
		color: #2691d9;
		text-decoration: none;
		cursor: pointer;
	}

	.signup_link a:hover {
		text-decoration: underline;
	}

	.transition-fade {
		transition: 0.4s;
		opacity: 1;
	}

	html.is-animating .transition-fade {
		opacity: 0;
	}

	#error {
		color: red;
		text-align: center;
		font-size: small;
		margin-top: 5px;
	}
</style>
